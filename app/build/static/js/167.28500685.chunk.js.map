{"version":3,"file":"static/js/167.28500685.chunk.js","mappings":"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","sources":["customhook/useInput.tsx","components/FileUpload/FileUpload.tsx","utils/getByteSize.ts","apis/postQuestion.tsx","components/modal/QuestionModal.tsx","pages/inquire/inquire.tsx"],"sourcesContent":["import { useState } from 'react';\n\nexport const useInput = (maxLength: number) => {\n  const [value, setValue] = useState<string>('');\n\n  const onChange = (\n    e:\n      | React.ChangeEvent<HTMLInputElement>\n      | React.ChangeEvent<HTMLTextAreaElement>,\n  ) => {\n    const { value } = e.target;\n    if (value.length <= maxLength) {\n      setValue(value);\n    }\n  };\n\n  return { value, onChange };\n};\n","import React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport { color, font } from '../../styles';\n\ninterface Props {\n  fileData: {\n    formData: FormData;\n    fileName: string;\n    size: number;\n  };\n  setFileData: React.Dispatch<\n    React.SetStateAction<{\n      formData: FormData;\n      fileName: string;\n      size: number;\n    }>\n  >;\n}\n\nexport const FileUpload = ({ fileData, setFileData }: Props) => {\n  const [fileSize, setFileSize] = useState<number>(0);\n  const fileForm = new FormData();\n  const addImage = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const files = e.currentTarget.files || [];\n    if (fileSize + files[0].size > 5 * 1024 * 1024) {\n      alert('5MB이상 업로드 할 수 없습니다');\n      return;\n    } else {\n      setFileSize(prev => prev + files[0].size);\n    }\n    for (let count = 0; count < files.length; count++) {\n      fileForm.append('image', files[count]);\n      setFileData({\n        ...fileData,\n        formData: fileForm,\n        size: fileSize + files[0].size,\n        fileName: files[count].name,\n      });\n    }\n  };\n\n  return (\n    <>\n      <Input id=\"input-file\" type=\"file\" onChange={e => addImage(e)} multiple />\n      <UpLoadButton htmlFor=\"input-file\">\n        <span>첨부파일</span>\n      </UpLoadButton>\n    </>\n  );\n};\n\nconst Input = styled.input`\n  display: none;\n`;\n\nconst UpLoadButton = styled.label`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 86px;\n  height: 40px;\n  background-color: #ff445e;\n  border-radius: 6px;\n  cursor: pointer;\n  span {\n    color: #ffffff;\n    font-size: 12px;\n    font-weight: 700;\n  }\n\n  &:active {\n    background-color: ${color.lighter};\n  }\n`;\n","export const getByteSize = (size: number): string => {\n  const sizeType = ['bytes', 'kB', 'MB', 'GB', 'TB', 'PB'];\n  const calculate = Math.floor(Math.log(size) / Math.log(1024));\n  return (\n    (size / Math.pow(1024, calculate)).toFixed(2) + ' ' + sizeType[calculate]\n  );\n};\n","import { customAxios } from './instance';\nimport setInterceptors from './common/setInterceptors';\n\nexport const postQuestion = async (body: FormData) => {\n  const response = await setInterceptors(customAxios).post(\n    `/email/question`,\n    body,\n  );\n\n  return response.data;\n};\n","import { useState, useEffect } from 'react';\nimport { css, cx } from '@emotion/css';\nimport styled from '@emotion/styled';\nimport { Box } from '../../components';\nimport { color, font } from '../../styles';\n\ninterface Props {\n  visible: boolean;\n  close: () => void;\n}\n\nfunction QuestionModal({ visible, close }: Props) {\n  const [modalState, setModalState] = useState(false);\n\n  useEffect(() => {\n    let timer: any;\n    if (visible) {\n      setModalState(true);\n    } else {\n      timer = setTimeout(() => setModalState(false), 800);\n    }\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [visible]);\n\n  if (!modalState) return null;\n\n  const box = css`\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    display: flex;\n    flex-direction: column;\n    z-index: 14;\n    padding: 16px 67px 24px 67px;\n    .wrap {\n      width: 100%;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n\n      .title {\n        width: fit-content;\n        height: 23px;\n        color: ${color.dark1};\n        ${font.size[16]}\n        ${font.weight[400]}\n      }\n      .warring {\n        width: fit-content;\n        height: 14px;\n        color: ${color.main};\n        ${font.size[10]}\n        ${font.weight[300]}\n        margin-bottom: 12px;\n      }\n    }\n\n    .close-btn {\n      width: 15px;\n      height: 15px;\n      margin: 0px 0px 0px 286px;\n    }\n\n    .send-btn {\n      width: 74px;\n      height: 44px;\n    }\n\n    label {\n      height: 20px;\n    }\n  `;\n\n  const overlay = css`\n    position: fixed;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    background-color: rgba(0, 0, 0, 0.3);\n    z-index: 13;\n  `;\n\n  const Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    P {\n      font-size: 14px;\n      font-weight: 400;\n      margin-top: 39px;\n    }\n  `;\n\n  const Buttons = styled.div`\n    display: flex;\n    margin-top: 20px;\n  `;\n\n  const Login = styled.button`\n    width: 74px;\n    height: 43px;\n    border-radius: 6px;\n    background-color: #ff445e;\n    box-shadow: rgba(132, 131, 141, 0.5);\n    color: #ffffff;\n    margin-left: 15px;\n\n    &:active {\n      background-color: ${color.lighter};\n    }\n  `;\n\n  const Close = styled.button`\n    width: 74px;\n    height: 43px;\n    border-radius: 6px;\n    background-color: #ff445e;\n    box-shadow: 0px 0px 8px 0px #84838d;\n    color: #ffffff;\n\n    &:active {\n      background-color: ${color.lighter};\n    }\n  `;\n\n  return (\n    <>\n      <Box light size={[360, 205]} className={box}>\n        <Wrapper>\n          <p>로그인 후 서비스를 이용해주세요</p>\n          <Buttons>\n            <Close onClick={close}>닫기</Close>\n          </Buttons>\n        </Wrapper>\n      </Box>\n      <div onClick={close} className={cx(overlay)}></div>\n    </>\n  );\n}\n\nexport default QuestionModal;\n","import React, { useState, useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport { useInput } from '../../customhook/useInput';\nimport { FileUpload } from '../../components/FileUpload/FileUpload';\nimport { Img } from '../../components';\nimport { getByteSize } from '../../utils/getByteSize';\nimport { postQuestion } from '../../apis/postQuestion';\nimport { useNavigate } from 'react-router-dom';\nimport QuestionModal from '../../components/modal/QuestionModal';\nimport getToken from '../../utils/getToken';\nimport { color } from '../../styles';\nimport { ACCESS_TOKEN } from '../../consts/tokenKey';\n\nconst Inquire = () => {\n  const title = useInput(45);\n  const contents = useInput(500);\n  const [fileData, setFileData] = useState<{\n    formData: FormData;\n    fileName: string;\n    size: number;\n  }>({\n    formData: new FormData(),\n    fileName: '',\n    size: 0,\n  });\n  const [modal, setModal] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(false);\n  const navigate = useNavigate();\n  const token = getToken(ACCESS_TOKEN);\n\n  const onSubmit = async () => {\n    if (!token) {\n      setModal(true);\n      return;\n    }\n    if (title.value.length && contents.value.length === 0) return;\n    fileData.formData.set(`title`, JSON.stringify(title.value));\n    fileData.formData.set('description', JSON.stringify(contents.value));\n\n    try {\n      setLoading(true);\n      const response = await postQuestion(fileData.formData);\n\n      if (response.success) navigate('/success');\n    } catch (err: any) {\n      console.log(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (!token) {\n      setModal(true);\n    }\n  }, [token]);\n\n  return (\n    <>\n      {loading ? (\n        <LoadingWrapper>\n          <LoadingImg>\n            <Img src=\"/img/loading.gif\" alt=\"loading\" />\n          </LoadingImg>\n        </LoadingWrapper>\n      ) : (\n        <Wrapper>\n          <h3>문의하기</h3>\n          {token ? (\n            <span>Modern@gmail.com</span>\n          ) : (\n            <span>로그인 후 이용할 수 있는 서비스입니다</span>\n          )}\n          <TitleInput\n            placeholder=\"문의제목을 입력해주세요. (3~45자)\"\n            {...title}\n          />\n          <Contents>\n            <TextWrapper>\n              <Text\n                placeholder=\"문의내용을 입력해주세요. (최대 500자)\"\n                {...contents}\n              />\n            </TextWrapper>\n            <TextLength>\n              <span>{`${contents.value.length}/500`}</span>\n            </TextLength>\n          </Contents>\n\n          {fileData.fileName !== '' ? (\n            <FileStorage>\n              <span>{fileData.fileName}</span>\n              <p>{getByteSize(fileData.size)}</p>\n              <CloseImg\n                onClick={() =>\n                  setFileData({\n                    formData: new FormData(),\n                    fileName: '',\n                    size: 0,\n                  })\n                }\n              >\n                <Img src=\"/img/close.png\" alt=\"close-modal\" />\n              </CloseImg>\n            </FileStorage>\n          ) : (\n            <FileWrapper>\n              <AddFile>\n                <span>첨부파일을 추가해주세요.</span>\n              </AddFile>\n              <FileUpload fileData={fileData} setFileData={setFileData} />\n            </FileWrapper>\n          )}\n\n          <ExplainWrapper>\n            <span>첨부한 파일의 전체 크기는 5Mbyte 미만이어야 합니다.</span>\n            <span>\n              파일첨부는 JPG, GIF, PSD, MS Office 파일, 한글, PDF만 가능합니다.\n            </span>\n          </ExplainWrapper>\n          <SubmitButton\n            titleValue={title.value}\n            contentsValue={contents.value}\n            onClick={() => onSubmit()}\n          >\n            제출\n          </SubmitButton>\n          <QuestionModal visible={modal} close={() => setModal(false)} />\n        </Wrapper>\n      )}\n    </>\n  );\n};\n\nexport default Inquire;\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-top: 32px;\n\n  h3 {\n    font-size: 28px;\n    font-weight: 700;\n    display: block;\n    margin-bottom: 30px;\n    color: #4f4e5c;\n  }\n\n  span {\n    display: block;\n    font-weight: 700;\n    font-size: 14px;\n    color: #4f4e5c;\n  }\n`;\n\nconst TitleInput = styled.input`\n  width: 540px;\n  height: 56px;\n  border-radius: 6px;\n  padding: 16px;\n  margin-top: 25px;\n  box-shadow: 0px 0px 8px 0px rgba(132, 131, 141, 0.2);\n  font-weight: 400;\n  font-size: 14px;\n  color: #4f4e5c;\n\n  ::placeholder {\n    font-weight: 400;\n    font-size: 14px;\n    color: #84838d;\n  }\n`;\n\nconst Contents = styled.div`\n  width: 540px;\n  height: 156px;\n  border-radius: 8px;\n  box-shadow: 0px 0px 8px 0px rgba(132, 131, 141, 0.2);\n  background-color: #ffffff;\n  margin-top: 15px;\n  margin-bottom: 15px;\n`;\n\nconst TextWrapper = styled.div`\n  width: 100%;\n  height: 80%;\n  padding: 15px;\n`;\n\nconst Text = styled.textarea`\n  width: 100%;\n  height: 100%;\n  overflow-y: auto;\n  padding-right: 7px;\n  font-weight: 400;\n  font-size: 14px;\n  color: #4f4e5c;\n`;\n\nconst TextLength = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: flex-end;\n\n  span {\n    font-size: 12px;\n    font-weight: 400;\n    color: #84838d;\n    margin-right: 13px;\n  }\n`;\nconst FileWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst AddFile = styled.div`\n  width: 438px;\n  height: 49px;\n  box-shadow: 0px 0px 8px 0px rgba(132, 131, 141, 0.2);\n  background-color: #ffffff;\n  display: flex;\n  align-items: center;\n  border-radius: 6px;\n  margin-right: 13px;\n  span {\n    color: #84838d;\n    font-size: 12px;\n    font-weight: 400;\n    margin-left: 16px;\n  }\n`;\n\nconst ExplainWrapper = styled.div`\n  width: 540px;\n  margin-top: 15px;\n  span {\n    display: block;\n    font-weight: 400;\n    font-size: 12px;\n    color: #84838d;\n  }\n`;\n\nconst SubmitButton = styled.button<{\n  titleValue: string;\n  contentsValue: string;\n}>`\n  width: 480px;\n  height: 52px;\n  background-color: ${props =>\n    props.titleValue.length && props.contentsValue.length > 0\n      ? '#FF445E'\n      : '#E7E7E8'};\n  border-radius: 6px;\n  color: #ffffff;\n  font-size: 16px;\n  font-weight: 400;\n  margin-top: 70px;\n  margin-bottom: 90px;\n  &:active {\n    background-color: ${color.lighter};\n  }\n`;\n\nconst FileStorage = styled.div`\n  width: 540px;\n  height: 56px;\n  background-color: #ffffff;\n  box-shadow: 0px 0px 8px 0px rgba(132, 131, 141, 0.2);\n  border-radius: 6px;\n  display: flex;\n  align-items: center;\n  padding-left: 20px;\n\n  span {\n    color: #4f4e5c;\n    font-size: 14px;\n    font-weight: 400;\n    flex: 1;\n  }\n\n  p {\n    color: #84838d;\n    font-size: 14px;\n    font-weight: 400;\n    margin-right: 19px;\n  }\n`;\n\nconst CloseImg = styled.div`\n  width: 22px;\n  height: 22px;\n  color: #4f4e5c;\n  cursor: pointer;\n  margin-right: 12px;\n`;\n\nconst LoadingWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100vh;\n`;\n\nconst LoadingImg = styled.div`\n  width: 350px;\n  height: 450px;\n`;\n"],"names":["useInput","maxLength","useState","value","setValue","onChange","e","target","length","FileUpload","fileData","setFileData","fileSize","setFileSize","fileForm","FormData","Input","id","type","files","currentTarget","size","alert","prev","count","append","formData","fileName","name","addImage","multiple","UpLoadButton","htmlFor","styled","color","getByteSize","calculate","Math","floor","log","pow","toFixed","postQuestion","body","setInterceptors","customAxios","post","response","data","visible","close","modalState","setModalState","useEffect","timer","setTimeout","clearTimeout","box","css","font","overlay","Wrapper","Buttons","Close","light","className","onClick","cx","title","contents","modal","setModal","loading","setLoading","navigate","useNavigate","token","getToken","ACCESS_TOKEN","onSubmit","set","JSON","stringify","success","console","LoadingWrapper","LoadingImg","src","alt","TitleInput","placeholder","Contents","TextWrapper","Text","TextLength","FileStorage","CloseImg","FileWrapper","AddFile","ExplainWrapper","SubmitButton","titleValue","contentsValue","props"],"sourceRoot":""}