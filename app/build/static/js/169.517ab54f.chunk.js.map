{"version":3,"file":"static/js/169.517ab54f.chunk.js","mappings":"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","sources":["pages/mypage/components/Spec/EditInput.tsx","pages/mypage/components/Spec/Visit.tsx","pages/mypage/components/Spec/style.ts"],"sourcesContent":["/** @format */\n\nimport { css, cx } from '@emotion/css';\nimport { useState, useEffect } from 'react';\nimport { color } from '../../../../styles';\nimport { Img } from '../../../../components';\nimport Style from './style';\nimport { add_images } from '../../../../redux/spec/reducer';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from '../../../../redux/root';\nimport axios from 'axios';\ninterface Props {\n  [key: string]: any;\n}\n\nexport interface IMAGE {\n  img: string;\n  checked: boolean;\n  File: FormData | any;\n}\n\nexport default function EditInputImg({ imgs, inline, editImages }: Props) {\n  const clone =\n    imgs &&\n    imgs.map((img: any) => ({\n      img: img,\n      checked: false,\n    }));\n\n  const [alarm, setAlarm] = useState(true);\n  const [myImage, setMyImage] = useState<IMAGE[]>(clone || []);\n  const addedImages = useSelector((state: RootState) => state.spec.addImages);\n\n  const addImage = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const files = e.currentTarget.files || [];\n    if (inline && files.length + myImage.length > 5) {\n      alert('사진은 최대 5개만 업로드 할 수 있습니다.');\n    } else if (!inline && files.length + myImage.length > 10) {\n      alert('사진은 최대 10개만 업로드 할 수 있습니다.');\n    } else {\n      const urls = [...myImage];\n      for (let count = 0; count < files.length; count++) {\n        const imageURL = URL.createObjectURL(files[count]);\n        addedImages.append('image', files[count]);\n        files &&\n          urls.push({ img: imageURL, checked: false, File: files[count] });\n      }\n      setMyImage(urls);\n\n      dispatch(add_images(addedImages));\n    }\n  };\n\n  useEffect(() => {\n    if (editImages.length) {\n      const getImages = async () => {\n        const files: File[] = [];\n        for (let image of editImages) {\n          await axios\n            .get<Blob>(\n              image.replace(\n                'https://d2ffbnf2hpheay.cloudfront.net/',\n                'https://mohae-image.s3.ap-northeast-2.amazonaws.com/',\n              ),\n              { responseType: 'blob' },\n            )\n            .then(res => {\n              const file = new File([res.data], image, {\n                type: res.data.type,\n              });\n              files.push(file);\n            });\n        }\n\n        const newMyimage = files.map((file: any, i: any) => {\n          return { img: file.name, checked: false, File: file };\n        });\n        setMyImage(newMyimage);\n        newMyimage.map((el: any, i: any) =>\n          addedImages.append('image', el.File),\n        );\n        dispatch(add_images(addedImages));\n      };\n      getImages();\n    }\n    setTimeout(() => {\n      setAlarm(false);\n    }, 5000);\n  }, []);\n\n  const style = Style({ inline: inline });\n\n  const sequence = css`\n    width: ${inline ? `15px` : `20px`};\n    height: ${inline ? `15px` : `20px`};\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: white;\n    border: 1px solid ${color.main};\n    color: ${color.main};\n    border-radius: 50%;\n    position: absolute;\n    bottom: ${inline ? `${56 / 2 - 15 / 2}px` : `8px`};\n    right: ${inline ? `${56 / 2 - 15 / 2}px` : `8px`};\n  `;\n\n  const selected = css`\n    background-color: ${color.main};\n    color: white;\n  `;\n  const dispatch = useDispatch();\n\n  const orderingImg = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n\n    e.stopPropagation();\n    e.stopPropagation();\n    const idx = Number(e.currentTarget.name);\n    const target = myImage[idx];\n    if (!target.checked) {\n      target.checked = !target.checked;\n      const newClone = myImage.filter(\n        (each: any, index: number) => index !== idx,\n      );\n\n      const section = myImage.reduce((acc: any, cur: any) => {\n        if (cur.checked) {\n          return ++acc;\n        } else {\n          return acc;\n        }\n      }, 0);\n      newClone.splice(section - 1, 0, target);\n\n      setMyImage(newClone);\n      const formData = new FormData();\n      for (var i = 0; i < myImage.length; i++) {\n        formData.append('image', newClone[i].File);\n      }\n      dispatch(add_images(formData));\n    } else {\n      target.checked = !target.checked;\n      const newClone = myImage.filter((each: any, index: any) => index !== idx);\n\n      const section = myImage.reduce((acc: any, cur: any) => {\n        if (!cur.checked) {\n          return ++acc;\n        } else {\n          return acc;\n        }\n      }, 0);\n      newClone.splice(newClone.length - (section - 1), 0, target);\n      setMyImage(newClone);\n      const formData = new FormData();\n      for (let i = 0; i < myImage.length; i++) {\n        formData.append('image', newClone[i].File);\n      }\n      dispatch(add_images(formData));\n    }\n  };\n\n  const deleteImg = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    e.stopPropagation();\n    const index = Number(e.currentTarget.id);\n    const newImage = [...myImage];\n    newImage.splice(index, 1);\n    setMyImage(newImage);\n    const targetName = e.currentTarget.name;\n    // 삭제버튼을 누른 File.name\n    const imagesNumber = addedImages.entries();\n    const formDataLenth = Array.from(addedImages.keys()).length;\n    const newFormData = new FormData();\n    // imagesNumber.next().value[1].name\n    // formData 내부의 파일 명\n    for (let i = 0; i < formDataLenth; i++) {\n      const target = imagesNumber.next().value[1];\n\n      if (targetName !== target.name) {\n        newFormData.append('image', target);\n      }\n    }\n    dispatch(add_images(newFormData));\n  };\n\n  const request = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const formData = new FormData();\n\n    formData.append('title', 'newTitle');\n    formData.append('description', 'newDescript');\n    for (var i = 0; i < myImage.length; i++) {\n      formData.append('image', myImage[i].File);\n    }\n  };\n\n  const images =\n    myImage &&\n    myImage.map((each: any, index: number) => {\n      const order = each.checked ? selected : '';\n      return (\n        <button\n          key={index}\n          className={'item-box'}\n          name={`${index}`}\n          onClick={orderingImg}\n        >\n          <Img src={each.img} />\n          <div className={cx(sequence, order)}>{index + 1}</div>\n          <button\n            name={each.File.name}\n            onClick={deleteImg}\n            id={`${index}`}\n            className={'delete'}\n          />\n        </button>\n      );\n    });\n  const maxNum = 10,\n    full = myImage.length < maxNum;\n  const countStyle = css`\n    color: ${color.dark1};\n    position: absolute;\n    bottom: 16px;\n    right: 16px;\n  `;\n  const maxNumberStyle = css`\n    color: ${full ? color.dark1 : color.main};\n  `;\n  return (\n    <>\n      <div className={cx(style)}>\n        {alarm && (\n          <div className=\"alarm\">\n            {'사진을 클릭하여 순서설정 및 삭제를 할 수 있습니다'}\n          </div>\n        )}\n        {!inline && (\n          <div className={cx(countStyle)}>\n            <span className={cx(maxNumberStyle)}>{`${myImage.length}`}</span>\n            {` / ${maxNum}`}\n          </div>\n        )}\n        <div className={'wrapper'}>\n          <div className={'container'}>\n            {images}\n            <>\n              {myImage.length < 10 && (\n                <form onSubmit={request}>\n                  <input\n                    id=\"input-file\"\n                    type=\"file\"\n                    onChange={addImage}\n                    multiple\n                    accept=\".jpg,.jpeg,.png\"\n                  />\n                  <label htmlFor=\"input-file\">\n                    <div className={'item-box add'}>\n                      <div\n                        className={cx(css`\n                          width: 24px;\n                          height: 24px;\n                          background: url('/img/add-dark3.png') no-repeat\n                            center/contain;\n                        `)}\n                      />\n                    </div>\n                  </label>\n                </form>\n              )}\n            </>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/** @format */\n\nimport { useState, useEffect } from 'react';\nimport { css, cx } from '@emotion/css';\nimport { color, radius, font } from '../../../../styles';\nimport {\n  Box,\n  FocusBar,\n  BasicModal,\n  Carousel,\n  PostIt,\n} from '../../../../components';\nimport EditInputImg from './EditInput';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { AppDispatch, RootState } from '../../../../redux/root';\nimport { getDetailSpec, Init_Form } from '../../../../redux/spec/reducer';\nimport { Btn } from '../../../../components';\nimport { spec_visit } from '../../../../redux/specModal/reducer';\nimport { ENDPOINT } from '../../../../utils/ENDPOINT';\nimport setInterceptors from '../../../../apis/common/setInterceptors';\nimport { customAxios } from '../../../../apis/instance';\n\nexport default function Visit() {\n  const isOpen = useSelector(\n    (state: RootState) => state.specModal.openSpecVisit,\n  );\n  const formData = useSelector((state: RootState) => state.spec.addImages);\n  const visitorInfo = useSelector((state: RootState) => state.user.user);\n\n  const text: { [key: string]: any } = {\n    sir: '님',\n  };\n  const [isEdit, setIsEdit] = useState(false);\n  const specInfo = useSelector((state: RootState) => state.spec.specInfo);\n  const dispatch = useDispatch<AppDispatch>();\n  const [value, setValue] = useState({\n    title: '',\n    description: '',\n  });\n  const [imgIndex, setImgIndex] = useState<number>(0);\n\n  const imgURLs =\n    specInfo?.specPhotos &&\n    specInfo.specPhotos.map(\n      (img: any) => `https://d2ffbnf2hpheay.cloudfront.net/${img.photo_url}`,\n    );\n\n  useEffect(() => {\n    if (!isOpen) setImgIndex(0);\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (!isEdit) {\n      dispatch(Init_Form());\n    }\n  }, [isEdit]);\n\n  const clickEditBtn = (e: React.MouseEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsEdit(!isEdit);\n    setValue({\n      title: specInfo.title,\n      description: specInfo.description,\n    });\n  };\n\n  const inputTitle = (e: React.ChangeEvent<HTMLInputElement>) => {\n    e.preventDefault();\n    e.stopPropagation();\n    const getTitle = e.currentTarget.value;\n    setValue({\n      ...value,\n      title: getTitle,\n    });\n  };\n\n  const inputDescription = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    e.preventDefault();\n    e.stopPropagation();\n    const getDescription = e.currentTarget.value;\n    setValue({\n      ...value,\n      description: getDescription,\n    });\n  };\n  const patchRequest = (e: React.MouseEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    e.stopPropagation();\n    formData.append('title', value.title);\n    formData.append('description', value.description);\n\n    if (formData.getAll('image').length === 0) {\n      const file = new File(['logo.png'], 'logo.png', {\n        type: 'image/jpg',\n      });\n      formData.append('image', file);\n    }\n\n    setInterceptors(customAxios)\n      .patch(`${ENDPOINT}specs/${specInfo.no && specInfo.no}`, formData, {\n        headers: {\n          accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n      })\n      .then(res => {\n        dispatch(getDetailSpec(specInfo.no));\n        setIsEdit(false);\n      })\n      .catch(err => {\n        console.log('err :>> ', err);\n      });\n  };\n\n  const editLayout = (\n    <>\n      <div className={'box texts'}>\n        <input\n          maxLength={15}\n          className={'title'}\n          value={value.title && value.title}\n          onChange={inputTitle}\n          spellCheck={false}\n        />\n        <div>\n          <FocusBar light thin />\n        </div>\n        <textarea\n          maxLength={300}\n          className={'description'}\n          value={value.description && value.description}\n          onChange={inputDescription}\n          spellCheck={false}\n        ></textarea>\n\n        <div className={'footer'}>\n          <div className={'number'}>\n            <span>{value.description && value.description.length}</span>\n            <span>{'/'}</span>\n            <span>{300}</span>\n          </div>\n          <div className={'complete'} onClick={patchRequest}>\n            <Btn main>{'완료'}</Btn>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n\n  const viewLayout = (\n    <>\n      <div className={'box texts'}>\n        <div className={'title'}>{specInfo && specInfo.title}</div>\n        <div>\n          <FocusBar light thin />\n        </div>\n        <div className={'wrapper'}>\n          <div className={'description'}>\n            {specInfo && specInfo.description}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n\n  const reset = (e: React.MouseEvent<Element>) => {\n    setIsEdit(false);\n    setValue({\n      title: specInfo.title,\n      description: specInfo.description,\n    });\n    dispatch(spec_visit(!isOpen));\n  };\n\n  return (\n    <BasicModal big visible={isOpen} reset={reset}>\n      <div className={cx(style)}>\n        <div className={'title'}>\n          <div>\n            <span className={'user'}>{specInfo && specInfo.nickname}</span>\n            <span>{text.sir}</span>\n          </div>\n          {specInfo?.userNo === visitorInfo.userNo && (\n            <div className={'report-btn'} onClick={clickEditBtn}>\n              <Btn white>{isEdit ? '수정 중...' : '수정하기'}</Btn>\n            </div>\n          )}\n        </div>\n        <div className={'wrapper'}>\n          {!isEdit ? (\n            <PostIt size=\"big\">\n              <div className={'carousel'}>\n                <Carousel\n                  outsideBtn\n                  imgs={imgURLs && imgURLs}\n                  imgIndex={imgIndex}\n                  setImgIndex={setImgIndex}\n                />\n              </div>\n            </PostIt>\n          ) : (\n            <Box size={[600, 470]}>\n              <div className={'editbox'}>\n                <EditInputImg edit editImages={imgURLs} />\n              </div>\n            </Box>\n          )}\n          <Box size={[336, 470]}>{isEdit ? editLayout : viewLayout}</Box>\n        </div>\n      </div>\n    </BasicModal>\n  );\n}\n\nconst style = css`\n  width: 100%;\n  height: 100%;\n  ${radius[24]};\n  padding: 48px 84px 60px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  > .title {\n    height: 36px;\n    display: flex;\n    justify-content: space-between;\n    color: ${color.dark1};\n    line-height: 130%;\n    font-size: 28px;\n    > .report-btn {\n      width: 100px;\n      height: 43px;\n    }\n    .user {\n      ${font.weight[700]};\n      margin-right: 8px;\n    }\n  }\n  > .wrapper {\n    display: flex;\n    justify-content: space-between;\n    > .box {\n      width: 100%;\n      height: 100%;\n      padding: 8px;\n    }\n    .editbox {\n      width: 100%;\n      height: 100%;\n      padding: 8px;\n    }\n    .carousel {\n      width: 504px;\n      height: 438px;\n      margin: 0 auto;\n    }\n    > .postit {\n      width: 600px;\n      height: 470px;\n      /* background-color: lightblue; */\n    }\n    .texts {\n      position: relative;\n      padding: 8px;\n      height: 100%;\n      > * {\n        margin: 8px;\n        color: ${color.dark1};\n      }\n\n      .title {\n        font-size: 18px;\n        display: flex;\n        align-items: center;\n        height: 23px;\n        margin-bottom: 16px;\n      }\n      .wrapper {\n        padding-right: 8px;\n        overflow: auto;\n      }\n      .description {\n        width: 304px;\n        height: 316px;\n        font-size: 14px;\n      }\n      > .footer {\n        position: absolute;\n        width: calc(336px - 16px);\n\n        bottom: 0;\n        margin: 0 inherit;\n        padding-right: 8px;\n        .complete {\n          width: 74px;\n          height: 43px;\n        }\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n      }\n    }\n  }\n`;\n","/** @format */\n\nimport { convertToRaw } from 'draft-js';\nimport { color, shadow, radius, font } from '../../../../styles';\nimport { css } from '@emotion/css';\nimport { keyframes } from '@emotion/react';\n\ninterface Props {\n  [key: string]: any;\n}\n\ninterface Check {\n  [key: string]: any;\n}\n\nexport default function Style({ inline }: Props) {\n  const check: Check = {\n    true: css`\n      .container {\n        height: fit-content;\n        padding: 0 8px;\n        & > * {\n          margin: 0 6px;\n        }\n        & > :first-child {\n          margin: 0 6px 0 8px;\n        }\n        & > :nth-of-type(5) {\n          margin: 0 8px 0 6px;\n        }\n        .show {\n        }\n      }\n    `,\n    undefined: css`\n      /* padding: 8px; */\n      .container {\n        flex-wrap: wrap;\n        .item-box {\n          width: 130px;\n          height: 130px;\n          margin: 8px;\n        }\n      }\n      .add {\n        ${shadow.normal}\n        background-color: white;\n      }\n      .icon {\n        width: 24px;\n        height: 24px;\n        background: url('img/add-dark3.png') no-repeat center/contain;\n      }\n\n      .delete {\n        top: 8px;\n        right: 8px;\n      }\n    `,\n  };\n\n  const style = () => {\n    const diffStyle = check[inline];\n    return css`\n      width: 100%;\n      height: 100%;\n      position: relative;\n\n      .alarm {\n        @keyframes fadeout {\n          0% {\n            opacity: 1;\n          }\n          80% {\n            opacity: 1;\n          }\n          100% {\n            opacity: 0;\n          }\n        }\n\n        position: absolute;\n        z-index: 20;\n        width: 250px;\n        height: 50px;\n        font-size: 13px;\n        ${font.weight[400]}\n        top: -30px;\n        padding: 4px 16px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        ${radius[6]}\n        ${shadow.normal}\n        background-color: white;\n        animation: fadeout 5s ease-in-out forwards;\n      }\n\n      .wrapper {\n        width: 100%;\n        height: 100%;\n        display: flex;\n        align-items: center;\n        overflow: auto;\n        &::-webkit-scrollbar {\n          display: none;\n        }\n      }\n      .container {\n        width: 100%;\n        height: 100%;\n        display: flex;\n        align-items: flex-start;\n        align-content: flex-start;\n        .show {\n          cursor: pointer;\n        }\n      }\n      .item-box {\n        width: 56px;\n        height: 56px;\n        position: relative;\n        :hover {\n          & > :nth-of-type(2) {\n            transition: 0.2s;\n            transform: scale(1.2);\n          }\n          & > button {\n            transition: 0.2s;\n            transform: scale(1.2);\n          }\n          /* background-color: #ffa1af11; */\n          box-shadow: 0px 0px 4px 2px rgba(255, 161, 175, 0.3);\n        }\n        background-color: white;\n      }\n\n      .add {\n        width: 56px;\n        height: 56px;\n        background: ${color.light4};\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        cursor: pointer;\n      }\n\n      .delete {\n        width: ${inline ? `15px` : `20px`};\n        height: ${inline ? `15px` : `20px`};\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        background: ${color.dark4} url('/img/delete.png') no-repeat\n          center/contain;\n        color: ${color.main};\n        border-radius: 50%;\n        position: absolute;\n        top: -5px;\n        right: -8px;\n      }\n\n      .icon {\n        width: 30px;\n        height: 30px;\n        background: url('/img/add-white.png') no-repeat center/contain;\n      }\n\n      #input-file {\n        display: none;\n      }\n\n      ${diffStyle};\n    `;\n  };\n  return style();\n}\n"],"names":["EditInputImg","imgs","inline","editImages","clone","map","img","checked","useState","alarm","setAlarm","myImage","setMyImage","addedImages","useSelector","state","spec","addImages","useEffect","length","getImages","files","image","axios","replace","responseType","then","res","file","File","data","type","push","newMyimage","i","name","el","append","dispatch","add_images","setTimeout","style","Style","sequence","css","color","selected","useDispatch","orderingImg","e","preventDefault","stopPropagation","idx","Number","currentTarget","target","newClone","filter","each","index","section","reduce","acc","cur","splice","formData","FormData","deleteImg","id","newImage","targetName","imagesNumber","entries","formDataLenth","Array","from","keys","newFormData","next","value","images","order","className","onClick","src","cx","full","countStyle","maxNumberStyle","onSubmit","onChange","alert","urls","count","imageURL","URL","createObjectURL","multiple","accept","htmlFor","Visit","isOpen","specModal","openSpecVisit","visitorInfo","user","isEdit","setIsEdit","specInfo","title","description","setValue","imgIndex","setImgIndex","imgURLs","specPhotos","photo_url","Init_Form","editLayout","maxLength","getTitle","spellCheck","light","thin","getDescription","getAll","setInterceptors","customAxios","patch","ENDPOINT","no","headers","getDetailSpec","catch","err","console","log","main","viewLayout","big","visible","reset","spec_visit","nickname","userNo","white","size","edit","outsideBtn","radius","font","check","true","undefined","shadow","diffStyle"],"sourceRoot":""}