{"version":3,"file":"static/js/742.8c59c5ea.chunk.js","mappings":"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","sources":["pages/faq/notice/NoticeWriteSidebar.tsx","pages/faq/notice/NoticeWriteAriticleTitle.tsx","pages/faq/notice/NoticeWriteSearch.tsx","pages/faq/notice/NoticeWriteheader.tsx","pages/faq/notice/NoticeWriteSearchHeader.tsx","pages/faq/notice/NoticeWriteSubAriticle.tsx","pages/faq/notice/NoticeCommentWrapper.tsx","pages/faq/Notice.tsx"],"sourcesContent":["import React from 'react';\nimport { css, cx } from '@emotion/css';\nimport { useNavigate } from 'react-router-dom';\n\ninterface Props {\n  name: string;\n}\n\nfunction sideBar({ name }: Props) {\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const navigate = useNavigate();\n  return (\n    <div className={cx(consumerSupport)}>\n      <div\n        className={name === 'notices' ? cx(noticeSelect) : cx(noticeNonSelect)}\n        onClick={() => navigate('/support/notices', { replace: true })}\n      >\n        <div className={cx(noticeText)}>공지사항</div>\n      </div>\n      <div\n        className={name === 'faqs' ? cx(faqSelect) : cx(faqNonSelect)}\n        onClick={() => navigate('/support/faqs', { replace: true })}\n      >\n        <div className={cx(faqText)}>FAQ</div>\n      </div>\n    </div>\n  );\n}\nexport default sideBar;\n\nconst consumerSupport = css`\n  width: 168px;\n  height: 106px;\n  box-shadow: 0px 0px 8px rgba(132, 131, 141, 0.5);\n  border-radius: 6px;\n`;\nconst faqNonSelect = css`\n  display: flex;\n  width: 168px;\n  height: 53px;\n  justify-content: center;\n  background-color: #ffff;\n  margin: 0;\n  cursor: pointer;\n  color: #4f4e5c;\n  border-radius: 0px 0px 6px 6px;\n`;\nconst faqSelect = css`\n  display: flex;\n  width: 168px;\n  height: 53px;\n  justify-content: center;\n  margin: 0;\n  background-color: #ff445e;\n  color: #ffffff;\n  cursor: pointer;\n  border-radius: 0px 0px 6px 6px;\n`;\nconst faqText = css`\n  display: flex;\n  align-items: center;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 170%;\n  text-align: center;\n`;\nconst noticeSelect = css`\n  display: flex;\n  justify-content: center;\n  left: 236px;\n  top: 252px;\n  width: 168px;\n  height: 53px;\n  background-color: #ff445e;\n  border-radius: 6px 6px 0 0;\n  font-family: 'Noto Sans KR';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 130%;\n  text-align: center;\n  align-items: center;\n  color: #fff;\n  cursor: pointer;\n`;\nconst noticeNonSelect = css`\n  display: flex;\n  justify-content: center;\n  left: 236px;\n  top: 252px;\n  width: 168px;\n  height: 53px;\n  background-color: #fff;\n  border-radius: 6px 6px 0 0;\n  font-family: 'Noto Sans KR';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 130%;\n  text-align: center;\n  align-items: center;\n  color: #4f4e5c;\n  cursor: pointer;\n`;\nconst noticeText = css`\n  display: flex;\n  justify-content: center;\n  font-family: 'Noto Sans KR';\n  font-style: normal;\n  width: 168px;\n  height: 21px;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 130%;\n  text-align: center;\n  align-items: center;\n`;\n","import React from 'react';\nimport { css, cx } from '@emotion/css';\nimport { Img } from '../../../components';\n\ninterface Props {\n  form: {\n    title: string;\n    description: string;\n    postNo: number;\n    editForm: boolean;\n  };\n  setForm: React.Dispatch<\n    React.SetStateAction<{\n      title: string;\n      description: string;\n      postNo: number;\n      editForm: boolean;\n    }>\n  >;\n  onSubmit: () => void;\n}\n\nconst articleTitle = ({ form, setForm, onSubmit }: Props) => {\n  const dateObject = new Date();\n  const year = dateObject.getFullYear();\n  const month = dateObject.getMonth() + 1;\n  const date = dateObject.getDate();\n\n  return (\n    <div className={cx(titleWrap)}>\n      <div className={cx(left)}>\n        <input\n          type=\"text\"\n          placeholder=\"제목을 입력해 주세요.\"\n          className={cx(title)}\n          onChange={e =>\n            setForm({\n              ...form,\n              title: e.target.value,\n            })\n          }\n          value={form.title}\n        />\n        <div className={cx(uploadDate)}>{`${year}년 ${month}월 ${date}일`}</div>\n      </div>\n      <button className={cx(rightWriteButton)} onClick={() => onSubmit()}>\n        <div className={cx(writeButtonText)}>\n          {form.editForm ? '수정' : '작성'}\n        </div>\n        <div\n          className={cx(css`\n            width: 20px;\n            height: 20px;\n            padding-left: 8px;\n          `)}\n        >\n          <Img src=\"/img/write.png\" alt=\"write\" />\n        </div>\n      </button>\n    </div>\n  );\n};\nexport default articleTitle;\n\nconst titleWrap = css`\n  display: flex;\n  padding: 16px 24px;\n  justify-content: space-between;\n`;\nconst title = css`\n  width: 508px;\n  height: 26px;\n  font-family: 'Noto Sans KR';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 170%;\n  color: #4f4e5c;\n  outline: none;\n  border: 0px;\n`;\nconst rightWriteButton = css`\n  display: flex;\n  width: 100px;\n  height: 43px;\n  align-items: center;\n  background-color: #ff445e;\n  border: none;\n  border-radius: 6px;\n  justify-content: center;\n  cursor: pointer;\n`;\nconst uploadDate = css`\n  font-family: 'Noto Sans KR';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 170%;\n  color: #84838d;\n`;\nconst left = css`\n  display: flex;\n  flex-direction: column;\n`;\nconst writeButtonText = css`\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 23.8px;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  color: #ffffff;\n`;\n","import React, { useState } from 'react';\nimport { css, cx } from '@emotion/css';\nimport { Img } from '../../../components';\nimport { SearchProps } from './NoticeWriteSearchHeader';\nimport { EditorState } from 'draft-js';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../../redux/root';\n\nconst search = ({\n  setIsWrite,\n  isWrite,\n  form,\n  setForm,\n  onSearch,\n  setEditorState,\n}: SearchProps) => {\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const [searchItem, setSearchItem] = useState<string>('');\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchItem(e.target.value);\n  };\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const user = useSelector((state: RootState) => state.user.user);\n  return (\n    <div className={cx(container)}>\n      <div className={cx(write)} onClick={() => setIsWrite(!isWrite)}>\n        {user.manager ? (\n          <span\n            onClick={() => {\n              setForm({\n                ...form,\n                title: '',\n                description: '',\n                editForm: false,\n                postNo: 0,\n              });\n              setEditorState(EditorState.createEmpty());\n            }}\n          >\n            {isWrite ? '작성취소' : '작성하기'}\n          </span>\n        ) : (\n          ''\n        )}\n      </div>\n      <form\n        className={cx(wrap)}\n        onSubmit={e => {\n          e.preventDefault();\n          onSearch(searchItem);\n        }}\n      >\n        <input\n          type=\"text\"\n          placeholder=\"무엇이 궁금한가요?\"\n          id=\"placeHolder\"\n          value={searchItem}\n          onChange={e => onChange(e)}\n        />\n        <div\n          className={cx(css`\n            width: 16px;\n            height: 16px;\n          `)}\n        >\n          <Img src=\"/img/search.png\" alt=\"search\" />\n        </div>\n      </form>\n    </div>\n  );\n};\nexport default search;\n\nconst container = css`\n  display: flex;\n  flex-direction: column;\n  justify-content: right;\n`;\nconst write = css`\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 20.4px;\n  color: #4f4e5c;\n  text-align: right;\n  margin-bottom: 8px;\n  cursor: pointer;\n`;\nconst wrap = css`\n  display: flex;\n  justify-content: space-between;\n  padding: 8px 16px;\n  width: 492px;\n  height: 40px;\n  background: #ffffff;\n  box-shadow: 0px 0px 8px 0px rgba(132, 131, 141, 0.2);\n  border-radius: 8px;\n  align-items: center;\n  color: #84838d;\n  #placeHolder {\n    width: 428px;\n    height: 24px;\n    border: 0px;\n    font-family: 'Noto Sans KR';\n    font-style: normal;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 170%;\n  }\n  #placeHolder:focus {\n    outline: none;\n  }\n`;\n","import React from 'react';\nimport { css, cx } from '@emotion/css';\n\ninterface Props {\n  param?: string;\n}\n\nconst header = ({ param }: Props) => {\n  return (\n    <div className={cx(topWrap)}>\n      <div className={cx(MainTitle)}>고객지원</div>\n      <div className={cx(subTitle)}>\n        {param === 'notices' ? '공지사항' : 'FAQ'}\n      </div>\n    </div>\n  );\n};\nexport default header;\n\nconst topWrap = css`\n  display: flex;\n  align-items: baseline;\n  margin-left: 190px;\n`;\nconst MainTitle = css`\n  font-family: 'Noto Sans KR';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 28px;\n  line-height: 130%;\n  color: #4f4e5c;\n  margin-right: 16px;\n`;\nconst subTitle = css`\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 130%;\n  color: #4f4e5c;\n`;\n","import React from 'react';\nimport { css, cx } from '@emotion/css';\nimport Search from './NoticeWriteSearch';\nimport Header from './NoticeWriteheader';\nimport { EditorState } from 'draft-js';\n\nexport interface SearchProps {\n  setIsWrite: React.Dispatch<React.SetStateAction<boolean>>;\n  isWrite: boolean;\n  form: {\n    title: string;\n    description: string;\n    postNo: number;\n    editForm: boolean;\n  };\n  setForm: React.Dispatch<\n    React.SetStateAction<{\n      title: string;\n      description: string;\n      postNo: number;\n      editForm: boolean;\n    }>\n  >;\n  param?: string;\n  onSearch: (searchBy: string) => void;\n  setEditorState: React.Dispatch<React.SetStateAction<EditorState>>;\n}\n\nconst serchHeader = ({\n  setIsWrite,\n  isWrite,\n  form,\n  setForm,\n  param,\n  onSearch,\n  setEditorState,\n}: SearchProps) => {\n  return (\n    <div className={cx(wholeStyle)}>\n      <Header param={param} />\n      <div className={cx(searchStyle)}>\n        <Search\n          setIsWrite={setIsWrite}\n          isWrite={isWrite}\n          form={form}\n          setForm={setForm}\n          onSearch={onSearch}\n          setEditorState={setEditorState}\n        />\n      </div>\n    </div>\n  );\n};\nexport default serchHeader;\n\nconst searchStyle = css`\n  display: flex;\n  flex-direction: column;\n  justify-content: right;\n`;\nconst wholeStyle = css`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 40px;\n`;\n","import React, { useState } from 'react';\nimport { css, cx } from '@emotion/css';\nimport { Img } from '../../../components';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../../redux/root';\n\ninterface Props {\n  notice: {\n    no: number;\n    title: string;\n    description: string;\n    createdAt: string;\n  };\n  key: number;\n  onEdit: (no: number, title: string, description: string) => void;\n  onDelete: (no: number) => void;\n}\n\nfunction subArticle({ notice, onEdit, onDelete }: Props) {\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const [isView, setIsView] = useState<boolean>(false);\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const user = useSelector((state: RootState) => state.user.user);\n\n  return (\n    <div\n      className={cx(\n        css`\n          display: flex;\n          flex-direction: column;\n          border-bottom: 1px solid #ededef;\n          .noncontainer {\n            width: 100%;\n            padding-left: 24px;\n            margin-bottom: 10px;\n            display: none;\n          }\n          .container {\n            width: 100%;\n            padding-left: 24px;\n            margin-bottom: 10px;\n            display: flex;\n          }\n        `,\n      )}\n    >\n      <div className={cx(wrap)}>\n        <div className={cx(left)}>\n          <div className={cx(title)}>{notice.title}</div>\n          <div className={cx(uploadDate)}>{notice.createdAt}</div>\n        </div>\n        <div className={cx(right)}>\n          {user.manager ? (\n            <div\n              className={cx(edit)}\n              onClick={() => {\n                onEdit(notice.no, notice.title, notice.description);\n              }}\n            >\n              수정\n            </div>\n          ) : (\n            ''\n          )}\n          {user.manager ? (\n            <div className={cx(d2lete)} onClick={() => onDelete(notice.no)}>\n              삭제\n            </div>\n          ) : (\n            ''\n          )}\n          <div\n            className={cx(css`\n              width: 16px;\n              height: 16px;\n              cursor: pointer;\n            `)}\n            onClick={() => setIsView(!isView)}\n          >\n            <Img\n              src={\n                !isView\n                  ? '/img/arrow-down-dark3.png'\n                  : '/img/arrow-up-dark3.png'\n              }\n            />\n          </div>\n        </div>\n      </div>\n      <div\n        className={\n          isView\n            ? 'container'\n            : css`\n                display: none;\n              `\n        }\n      >\n        <div\n          className={\n            isView\n              ? contents\n              : css`\n                  display: none;\n                `\n          }\n          dangerouslySetInnerHTML={{ __html: notice.description }}\n        ></div>\n      </div>\n    </div>\n  );\n}\nexport default subArticle;\n\nconst wrap = css`\n  display: flex;\n  padding: 16px 24px;\n  justify-content: space-between;\n`;\nconst title = css`\n  width: 508px;\n  height: 26px;\n  font-family: 'Noto Sans KR';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 170%;\n  color: #4f4e5c;\n  cursor: pointer;\n`;\nconst right = css`\n  display: flex;\n  font-family: 'Noto Sans KR';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 170%;\n  text-align: right;\n  align-items: center;\n  color: #84838d;\n`;\nconst edit = css`\n  cursor: pointer;\n`;\nconst d2lete = css`\n  padding-left: 8px;\n  padding-right: 16px;\n  cursor: pointer;\n`;\nconst uploadDate = css`\n  font-family: 'Noto Sans KR';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 170%;\n  color: #84838d;\n  cursor: pointer;\n`;\nconst left = css`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst contents = css`\n  border-left: 2px solid #ff445e;\n  padding-left: 10px;\n  width: 90%;\n`;\n","import SubArticle from './NoticeWriteSubAriticle';\n\ninterface Props {\n  notices: NoticeTYPE[];\n  onEdit: (no: number, title: string, description: string) => void;\n  onDelete: (no: number) => void;\n}\n\nexport interface NoticeTYPE {\n  no: number;\n  title: string;\n  description: string;\n  createdAt: string;\n}\nconst CommentContainer = ({ notices, onEdit, onDelete }: Props) => {\n  return (\n    <section>\n      {notices.map((notice: NoticeTYPE, index: number) => (\n        <SubArticle\n          key={index}\n          notice={notice}\n          onEdit={onEdit}\n          onDelete={onDelete}\n        />\n      ))}\n    </section>\n  );\n};\nexport default CommentContainer;\n","import { css, cx } from '@emotion/css';\nimport styled from '@emotion/styled';\nimport SideBar from './notice/NoticeWriteSidebar';\nimport ArticleTitle from './notice/NoticeWriteAriticleTitle';\nimport HeaderSearch from './notice/NoticeWriteSearchHeader';\nimport CommetContainer from './notice/NoticeCommentWrapper';\nimport { useCallback, useEffect, useState } from 'react';\nimport {\n  createNoticePost,\n  getNotices,\n  searchNotices,\n} from '../../redux/notice/reducer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch } from '../../redux/root';\nimport { RootState } from '../../redux/root';\nimport { useNavigate, useParams, useSearchParams } from 'react-router-dom';\nimport { deleteNoticePost } from '../../apis/notice';\nimport { Editor } from 'react-draft-wysiwyg';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\n\nconst Notice = () => {\n  const [isWrite, setIsWrite] = useState<boolean>(false);\n  const [form, setForm] = useState<{\n    title: string;\n    description: string;\n    postNo: number;\n    editForm: boolean;\n  }>({\n    title: '',\n    description: '',\n    postNo: 0,\n    editForm: false,\n  });\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n  const { name } = useParams();\n  const [searchParams] = useSearchParams();\n  const dispatch = useDispatch<AppDispatch>();\n  const notices: any = useSelector((state: RootState) => state.notice.post);\n  const navigate = useNavigate();\n  const searchItem = searchParams.get('title');\n\n  const onSubmit = useCallback(() => {\n    if (form.title === '' || form.description === '') {\n      alert('내용을 입력해주세요');\n      return;\n    }\n    const { title, description, editForm, postNo } = form;\n    dispatch(\n      createNoticePost({ title, description, params: name!, editForm, postNo }),\n    ).then(res => {\n      if (res.payload.success) setIsWrite(false);\n    });\n  }, [form]);\n\n  const onEdit = (no: number, title: string, description: string) => {\n    setForm({\n      ...form,\n      title,\n      description,\n      editForm: true,\n      postNo: no,\n    });\n    const blocksFromHtml = htmlToDraft(description);\n    const { contentBlocks, entityMap } = blocksFromHtml;\n    const contentState = ContentState.createFromBlockArray(\n      contentBlocks,\n      entityMap,\n    );\n    const newState = EditorState.createWithContent(contentState);\n    setEditorState(newState);\n    setIsWrite(true);\n  };\n\n  const onDelete = async (no: number) => {\n    const data = { params: name, postNo: no };\n    await deleteNoticePost(data).then(res => {\n      if (res.data.success) dispatch(getNotices(name!));\n    });\n  };\n\n  const onSearch = (searchBy: string) => {\n    navigate({\n      pathname: `/support/${name}`,\n      search: `?title=${searchBy}`,\n    });\n  };\n  const editorToHtml = (editorState: any) => {\n    return draftToHtml(convertToRaw(editorState.getCurrentContent()));\n  };\n  const onEditorChange = (editorState: EditorState) => {\n    const value = editorToHtml(editorState);\n    setEditorState(editorState);\n    setForm({\n      ...form,\n      description: value,\n    });\n  };\n\n  useEffect(() => {\n    if (searchItem) {\n      dispatch(\n        searchNotices({\n          params: name,\n          search: searchItem,\n        }),\n      );\n    } else {\n      if (name) {\n        dispatch(getNotices(name));\n      }\n    }\n  }, [dispatch, isWrite, name, searchItem]);\n\n  return (\n    <div className={cx(wholeStyle)}>\n      <HeaderSearch\n        isWrite={isWrite}\n        setIsWrite={setIsWrite}\n        form={form}\n        setForm={setForm}\n        param={name}\n        onSearch={onSearch}\n        setEditorState={setEditorState}\n      />\n      <section className={cx(sectionStyle)}>\n        <SideBar name={name!} />\n        <article className={cx(container)}>\n          {isWrite && (\n            <>\n              <ArticleTitle form={form} setForm={setForm} onSubmit={onSubmit} />\n              <DraftEditor>\n                <Editor\n                  editorState={editorState}\n                  onEditorStateChange={onEditorChange}\n                  editorClassName=\"editor\"\n                  localization={{\n                    locale: 'ko',\n                  }}\n                  placeholder=\"본문 내용을 작성해주세요.\"\n                />\n              </DraftEditor>\n            </>\n          )}\n          <CommetContainer\n            notices={notices}\n            onEdit={onEdit}\n            onDelete={onDelete}\n          />\n        </article>\n      </section>\n    </div>\n  );\n};\nexport default Notice;\n\nconst wholeStyle = css`\n  margin: 0 auto;\n  width: 1190px;\n  display: flex;\n  flex-direction: column;\n  justify-content: left;\n  width: 1128px;\n  min-height: 80vh;\n`;\nconst container = css`\n  width: 936px;\n  height: fit-content;\n  max-height: 696px;\n  background: #ffffff;\n  box-shadow: 0px 0px 8px rgba(132, 131, 141, 0.5);\n  border-radius: 6px;\n  overflow-x: hidden;\n  overflow-y: auto;\n  margin-left: 24px;\n  ::-webkit-scrollbar {\n    width: 5px;\n    border-radius: 10px;\n    position: relative;\n    left: 300px;\n    top: 50px;\n    height: 183px;\n  }\n  ::-webkit-scrollbar-thumb {\n    background-color: rgba(255, 68, 94, 1);\n    border-radius: 10px;\n  }\n  ::-webkit-scrollbar-track {\n    background-color: rgba(231, 231, 232, 1);\n    border-radius: 10px;\n  }\n`;\nconst sectionStyle = css`\n  display: flex;\n  margin-top: 24px;\n`;\n\nconst DraftEditor = styled.div`\n  padding: 20px;\n  box-shadow: inset 0px 0px 8px rgba(132, 131, 141, 0.2);\n  .rdw-editor-wrapper {\n    overflow-y: auto;\n    height: 100px;\n  }\n  .rdw-editor-toolbar {\n    display: none;\n  }\n  .rdw-editor-main {\n    font-weight: 400;\n    font-size: 14px;\n  }\n`;\n"],"names":["_ref","name","navigate","useNavigate","_jsxs","className","cx","consumerSupport","children","_jsx","noticeSelect","noticeNonSelect","onClick","replace","noticeText","faqSelect","faqNonSelect","faqText","css","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","form","setForm","onSubmit","dateObject","Date","year","getFullYear","month","getMonth","date","getDate","titleWrap","left","type","placeholder","title","onChange","e","_objectSpread","target","value","uploadDate","concat","rightWriteButton","writeButtonText","editForm","Img","src","alt","setIsWrite","isWrite","onSearch","setEditorState","_useState","useState","_useState2","_slicedToArray","searchItem","setSearchItem","user","useSelector","state","container","write","manager","description","postNo","EditorState","wrap","preventDefault","id","param","topWrap","MainTitle","subTitle","wholeStyle","Header","searchStyle","Search","notice","onEdit","onDelete","isView","setIsView","createdAt","right","edit","no","d2lete","contents","dangerouslySetInnerHTML","__html","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","notices","map","index","SubArticle","_useState3","_useState4","_useState5","_useState6","editorState","useParams","_useSearchParams","useSearchParams","searchParams","dispatch","useDispatch","post","get","useCallback","createNoticePost","params","then","res","payload","success","alert","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","_context","prev","next","deleteNoticePost","getNotices","stop","_x","apply","arguments","useEffect","searchNotices","search","HeaderSearch","searchBy","pathname","sectionStyle","SideBar","_Fragment","ArticleTitle","DraftEditor","Editor","onEditorStateChange","draftToHtml","convertToRaw","getCurrentContent","editorToHtml","editorClassName","localization","locale","CommetContainer","blocksFromHtml","htmlToDraft","contentBlocks","entityMap","contentState","ContentState","newState","styled"],"sourceRoot":""}