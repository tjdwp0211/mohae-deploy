{"version":3,"file":"static/js/895.d168b196.chunk.js","mappings":"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","sources":["pages/mypage/components/Spec/InputImg.tsx","pages/mypage/components/Spec/Edit.tsx","pages/mypage/components/Spec/style.ts"],"sourcesContent":["/** @format */\n\nimport { css, cx } from '@emotion/css';\nimport { useState, useEffect } from 'react';\nimport { color } from '../../../../styles';\nimport { Img } from '../../../../components';\nimport Style from './style';\nimport { add_images } from '../../../../redux/spec/reducer';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from '../../../../redux/root';\ninterface Props {\n  [key: string]: any;\n}\n\ninterface IMAGE {\n  img: string;\n  checked: boolean;\n  File: FormData | any;\n}\n\nexport default function InputImg({ imgs, inline }: Props) {\n  const clone =\n    imgs &&\n    imgs.map((img: any) => ({\n      img: img,\n      checked: false,\n    }));\n\n  const [alarm, setAlarm] = useState(true);\n  const [myImage, setMyImage] = useState<IMAGE[]>(clone || []);\n  const addedImages = useSelector((state: RootState) => state.spec.addImages);\n\n  const addImage = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const files = e.currentTarget.files || [];\n    if (inline && files.length + myImage.length > 5) {\n      alert('사진은 최대 5개만 업로드 할 수 있습니다.');\n    } else if (!inline && files.length + myImage.length > 10) {\n      alert('사진은 최대 10개만 업로드 할 수 있습니다.');\n    } else {\n      const urls = [...myImage];\n      for (let count = 0; count < files.length; count++) {\n        const imageURL = URL.createObjectURL(files[count]);\n        addedImages.append('image', files[count]);\n        files &&\n          urls.push({ img: imageURL, checked: false, File: files[count] });\n      }\n      setMyImage(urls);\n\n      dispatch(add_images(addedImages));\n    }\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      setAlarm(false);\n    }, 5000);\n  }, []);\n\n  const style = Style({ inline: inline });\n\n  const sequence = css`\n    width: ${inline ? `15px` : `20px`};\n    height: ${inline ? `15px` : `20px`};\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: white;\n    border: 1px solid ${color.main};\n    color: ${color.main};\n    border-radius: 50%;\n    position: absolute;\n    bottom: ${inline ? `${56 / 2 - 15 / 2}px` : `8px`};\n    right: ${inline ? `${56 / 2 - 15 / 2}px` : `8px`};\n  `;\n\n  const selected = css`\n    background-color: ${color.main};\n    color: white;\n  `;\n  const dispatch = useDispatch();\n\n  const orderingImg = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n\n    e.stopPropagation();\n    e.stopPropagation();\n    const idx = Number(e.currentTarget.name);\n    const target = myImage[idx];\n    if (!target.checked) {\n      target.checked = !target.checked;\n      const newClone = myImage.filter(\n        (each: any, index: number) => index !== idx,\n      );\n\n      const section = myImage.reduce((acc: any, cur: any) => {\n        if (cur.checked) {\n          return ++acc;\n        } else {\n          return acc;\n        }\n      }, 0);\n      newClone.splice(section - 1, 0, target);\n\n      setMyImage(newClone);\n      const formData = new FormData();\n      for (var i = 0; i < myImage.length; i++) {\n        formData.append('image', newClone[i].File);\n      }\n      dispatch(add_images(formData));\n    } else {\n      target.checked = !target.checked;\n      const newClone = myImage.filter((each: any, index: any) => index !== idx);\n\n      const section = myImage.reduce((acc: any, cur: any) => {\n        if (!cur.checked) {\n          return ++acc;\n        } else {\n          return acc;\n        }\n      }, 0);\n      newClone.splice(newClone.length - (section - 1), 0, target);\n      setMyImage(newClone);\n      const formData = new FormData();\n      for (let i = 0; i < myImage.length; i++) {\n        formData.append('image', newClone[i].File);\n      }\n      dispatch(add_images(formData));\n    }\n  };\n\n  const deleteImg = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    e.stopPropagation();\n    const index = Number(e.currentTarget.id);\n    const newImage = [...myImage];\n    newImage.splice(index, 1);\n    setMyImage(newImage);\n    const targetName = e.currentTarget.name;\n    // 삭제버튼을 누른 File.name\n    const imagesNumber = addedImages.entries();\n    const formDataLenth = Array.from(addedImages.keys()).length;\n    const newFormData = new FormData();\n    // imagesNumber.next().value[1].name\n    // formData 내부의 파일 명\n    for (let i = 0; i < formDataLenth; i++) {\n      const target = imagesNumber.next().value[1];\n      console.log(imagesNumber);\n      if (targetName !== target.name) {\n        newFormData.append('image', target);\n      }\n    }\n    dispatch(add_images(newFormData));\n  };\n\n  const request = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const formData = new FormData();\n\n    formData.append('title', 'newTitle');\n    formData.append('description', 'newDescript');\n    for (var i = 0; i < myImage.length; i++) {\n      formData.append('image', myImage[i].File);\n    }\n  };\n\n  const images =\n    myImage &&\n    myImage.map((each: any, index: number) => {\n      const order = each.checked ? selected : '';\n      return (\n        <button\n          key={index}\n          className={'item-box'}\n          name={`${index}`}\n          onClick={orderingImg}\n        >\n          <Img src={each.img} />\n          <div className={cx(sequence, order)}>{index + 1}</div>\n          <button\n            name={each.File.name}\n            onClick={deleteImg}\n            id={`${index}`}\n            className={'delete'}\n          />\n        </button>\n      );\n    });\n  const maxNum = 10,\n    full = myImage.length < maxNum;\n  const countStyle = css`\n    color: ${color.dark1};\n    position: absolute;\n    bottom: 16px;\n    right: 16px;\n  `;\n  const maxNumberStyle = css`\n    color: ${full ? color.dark1 : color.main};\n  `;\n  return (\n    <>\n      <div className={cx(style)}>\n        {alarm && (\n          <div className=\"alarm\">\n            {'사진을 클릭하여 순서설정 및 삭제를 할 수 있습니다'}\n          </div>\n        )}\n        {!inline && (\n          <div className={cx(countStyle)}>\n            <span className={cx(maxNumberStyle)}>{`${myImage.length}`}</span>\n            {` / ${maxNum}`}\n          </div>\n        )}\n        <div className={'wrapper'}>\n          <div className={'container'}>\n            {images}\n            <>\n              {myImage.length < 10 && (\n                <form onSubmit={request}>\n                  <input\n                    id=\"input-file\"\n                    type=\"file\"\n                    onChange={addImage}\n                    multiple\n                    accept=\".jpg,.jpeg,.png\"\n                  />\n                  <label htmlFor=\"input-file\">\n                    <div className={'item-box add'}>\n                      <div\n                        className={cx(css`\n                          width: 24px;\n                          height: 24px;\n                          background: url('/img/add-dark3.png') no-repeat\n                            center/contain;\n                        `)}\n                      />\n                    </div>\n                  </label>\n                </form>\n              )}\n            </>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/** @format */\n\nimport { useEffect, useState } from 'react';\nimport { css, cx } from '@emotion/css';\nimport { color, radius, font } from '../../../../styles';\nimport { Box, FocusBar, BasicModal, Btn } from '../../../../components';\nimport InputImg from './InputImg';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from '../../../../redux/root';\nimport { spec_create } from '../../../../redux/specModal/reducer';\nimport { ENDPOINT } from '../../../../utils/ENDPOINT';\nimport setInterceptors from '../../../../apis/common/setInterceptors';\nimport { customAxios } from '../../../../apis/instance';\nimport { Init_Form } from '../../../../redux/spec/reducer';\n\nexport default function Edit() {\n  const dispatch = useDispatch();\n  const isOpen = useSelector(\n    (state: RootState) => state.specModal.openSpecCreate,\n  );\n  const text: { [key: string]: any } = {\n    edit: '스펙 수정하기',\n    register: '스펙 등록하기',\n    complete: '완료',\n    maxNum: 300,\n  };\n  const [value, setValue] = useState({\n    title: '',\n    description: '',\n  });\n\n  const inputDescription = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const inputValue = e.currentTarget.value;\n    setValue({\n      ...value,\n      description: inputValue,\n    });\n  };\n\n  const inputTitle = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const inputValue = e.currentTarget.value;\n    setValue({\n      ...value,\n      title: inputValue,\n    });\n  };\n  const addImages = useSelector((state: RootState) => state.spec.addImages);\n\n  const createRequest = (e: React.MouseEvent<HTMLDivElement>) => {\n    if (!value.title || !value.description) {\n      alert('제목과 내용을 입력해주세요.');\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (addImages.getAll('image').length === 0) {\n      const file = new File(['logo.png'], 'logo.png', {\n        type: 'image/jpg',\n      });\n      addImages.append('image', file);\n    }\n\n    addImages.append('title', value.title);\n    addImages.append('description', value.description);\n\n    setInterceptors(customAxios)\n      .post(`${ENDPOINT}specs/regist`, addImages, {\n        headers: {\n          accept: 'application/json',\n          'Content-Type': 'multipart/form-data',\n        },\n      })\n      .then(res => {\n        if (res.data.statusCode >= 200 && res.data.statusCode <= 204) {\n          alert('스펙이 등록되었습니다.');\n          setTimeout(() => {\n            dispatch(spec_create(!isOpen));\n          }, 100);\n        }\n        console.log(`res`, res.data);\n      })\n      .catch(err => {\n        console.log(`err`, err);\n      });\n  };\n  const reset = (e: React.MouseEvent) => {\n    dispatch(spec_create(false));\n  };\n  useEffect(() => {\n    if (!isOpen) {\n      setValue({\n        title: '',\n        description: '',\n      });\n      dispatch(Init_Form());\n    }\n  }, [dispatch, isOpen]);\n\n  return (\n    <BasicModal big visible={isOpen} reset={reset}>\n      <div className={cx(style)}>\n        <div className={'title'}>{text.register}</div>\n        <div className={'wrapper'}>\n          <Box size={[600, 470]}>\n            <div className={'box'}>\n              <InputImg edit />\n            </div>\n          </Box>\n          <Box size={[336, 470]}>\n            <div className={'box texts'}>\n              <input\n                placeholder={'제목을 입력해주세요.'}\n                maxLength={15}\n                className={'title'}\n                value={value.title}\n                onChange={inputTitle}\n                spellCheck={false}\n              />\n              <div>\n                <FocusBar light thin />\n              </div>\n              <textarea\n                placeholder={'내용을 입력해주세요.'}\n                maxLength={300}\n                className={'description'}\n                value={value.description}\n                onChange={inputDescription}\n                spellCheck={false}\n              ></textarea>\n\n              <div className={'footer'}>\n                <div className={'number'}>\n                  <span>{value.description.length}</span>\n                  <span>{'/'}</span>\n                  <span>{text.maxNum}</span>\n                </div>\n                <div className={'complete'} onClick={createRequest}>\n                  <Btn main>{text.complete}</Btn>\n                </div>\n              </div>\n            </div>\n          </Box>\n        </div>\n      </div>\n    </BasicModal>\n  );\n}\n\nconst style = css`\n  width: 100%;\n  height: 100%;\n  ${radius[24]};\n  padding: 48px 84px 60px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  > .title {\n    font-size: 28px;\n    height: 36px;\n    ${font.weight[700]};\n    color: ${color.dark1};\n    line-height: 130%;\n  }\n  > .wrapper {\n    display: flex;\n    justify-content: space-between;\n    .box {\n      width: 100%;\n      height: 100%;\n      padding: 8px;\n    }\n    .texts {\n      > * {\n        margin: 8px;\n        color: ${color.dark1};\n      }\n      .title {\n        font-size: 18px;\n        display: flex;\n        align-items: center;\n        height: 23px;\n        margin-bottom: 16px;\n      }\n      .description {\n        width: calc(288px + 8px);\n        height: 316px;\n        overflow: auto;\n        font-size: 14px;\n        box-sizing: content-box;\n        padding-right: calc(8px + 8px);\n      }\n\n      > .footer {\n        .complete {\n          width: 74px;\n          height: 43px;\n        }\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n      }\n    }\n  }\n`;\n","/** @format */\n\nimport { convertToRaw } from 'draft-js';\nimport { color, shadow, radius, font } from '../../../../styles';\nimport { css } from '@emotion/css';\nimport { keyframes } from '@emotion/react';\n\ninterface Props {\n  [key: string]: any;\n}\n\ninterface Check {\n  [key: string]: any;\n}\n\nexport default function Style({ inline }: Props) {\n  const check: Check = {\n    true: css`\n      .container {\n        height: fit-content;\n        padding: 0 8px;\n        & > * {\n          margin: 0 6px;\n        }\n        & > :first-child {\n          margin: 0 6px 0 8px;\n        }\n        & > :nth-of-type(5) {\n          margin: 0 8px 0 6px;\n        }\n        .show {\n        }\n      }\n    `,\n    undefined: css`\n      /* padding: 8px; */\n      .container {\n        flex-wrap: wrap;\n        .item-box {\n          width: 130px;\n          height: 130px;\n          margin: 8px;\n        }\n      }\n      .add {\n        ${shadow.normal}\n        background-color: white;\n      }\n      .icon {\n        width: 24px;\n        height: 24px;\n        background: url('img/add-dark3.png') no-repeat center/contain;\n      }\n\n      .delete {\n        top: 8px;\n        right: 8px;\n      }\n    `,\n  };\n\n  const style = () => {\n    const diffStyle = check[inline];\n    return css`\n      width: 100%;\n      height: 100%;\n      position: relative;\n\n      .alarm {\n        @keyframes fadeout {\n          0% {\n            opacity: 1;\n          }\n          80% {\n            opacity: 1;\n          }\n          100% {\n            opacity: 0;\n          }\n        }\n\n        position: absolute;\n        z-index: 20;\n        width: 250px;\n        height: 50px;\n        font-size: 13px;\n        ${font.weight[400]}\n        top: -30px;\n        padding: 4px 16px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        ${radius[6]}\n        ${shadow.normal}\n        background-color: white;\n        animation: fadeout 5s ease-in-out forwards;\n      }\n\n      .wrapper {\n        width: 100%;\n        height: 100%;\n        display: flex;\n        align-items: center;\n        overflow: auto;\n        &::-webkit-scrollbar {\n          display: none;\n        }\n      }\n      .container {\n        width: 100%;\n        height: 100%;\n        display: flex;\n        align-items: flex-start;\n        align-content: flex-start;\n        .show {\n          cursor: pointer;\n        }\n      }\n      .item-box {\n        width: 56px;\n        height: 56px;\n        position: relative;\n        :hover {\n          & > :nth-of-type(2) {\n            transition: 0.2s;\n            transform: scale(1.2);\n          }\n          & > button {\n            transition: 0.2s;\n            transform: scale(1.2);\n          }\n          /* background-color: #ffa1af11; */\n          box-shadow: 0px 0px 4px 2px rgba(255, 161, 175, 0.3);\n        }\n        background-color: white;\n      }\n\n      .add {\n        width: 56px;\n        height: 56px;\n        background: ${color.light4};\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        cursor: pointer;\n      }\n\n      .delete {\n        width: ${inline ? `15px` : `20px`};\n        height: ${inline ? `15px` : `20px`};\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        background: ${color.dark4} url('/img/delete.png') no-repeat\n          center/contain;\n        color: ${color.main};\n        border-radius: 50%;\n        position: absolute;\n        top: -5px;\n        right: -8px;\n      }\n\n      .icon {\n        width: 30px;\n        height: 30px;\n        background: url('/img/add-white.png') no-repeat center/contain;\n      }\n\n      #input-file {\n        display: none;\n      }\n\n      ${diffStyle};\n    `;\n  };\n  return style();\n}\n"],"names":["InputImg","imgs","inline","clone","map","img","checked","useState","alarm","setAlarm","myImage","setMyImage","addedImages","useSelector","state","spec","addImages","useEffect","setTimeout","style","Style","sequence","css","color","selected","dispatch","useDispatch","orderingImg","e","preventDefault","stopPropagation","idx","Number","currentTarget","name","target","newClone","filter","each","index","section","reduce","acc","cur","splice","length","formData","FormData","i","append","File","add_images","deleteImg","id","newImage","targetName","imagesNumber","entries","formDataLenth","Array","from","keys","newFormData","next","value","console","log","images","order","className","onClick","src","cx","full","countStyle","maxNumberStyle","onSubmit","type","onChange","files","alert","urls","count","imageURL","URL","createObjectURL","push","multiple","accept","htmlFor","Edit","isOpen","specModal","openSpecCreate","text","title","description","setValue","Init_Form","big","visible","reset","spec_create","size","edit","placeholder","maxLength","inputValue","spellCheck","light","thin","getAll","file","setInterceptors","customAxios","post","ENDPOINT","headers","then","res","data","statusCode","catch","err","main","radius","font","check","true","undefined","shadow","diffStyle"],"sourceRoot":""}