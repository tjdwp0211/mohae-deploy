{"version":3,"file":"static/js/742.13132eac.chunk.js","mappings":"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","sources":["pages/faq/notice/NoticeWriteSidebar.tsx","pages/faq/notice/NoticeWriteAriticleTitle.tsx","pages/faq/notice/NoticeWriteSearch.tsx","pages/faq/notice/NoticeWriteheader.tsx","pages/faq/notice/NoticeWriteSearchHeader.tsx","pages/faq/notice/NoticeWriteSubAriticle.tsx","pages/faq/notice/NoticeCommentWrapper.tsx","pages/faq/Notice.tsx"],"sourcesContent":["import React from 'react';\nimport { css, cx } from '@emotion/css';\nimport { useNavigate } from 'react-router-dom';\n\ninterface Props {\n  name: string;\n}\n\nfunction sideBar({ name }: Props) {\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const navigate = useNavigate();\n  return (\n    <div className={cx(consumerSupport)}>\n      <div\n        className={name === 'notices' ? cx(noticeSelect) : cx(noticeNonSelect)}\n        onClick={() => navigate('/support/notices', { replace: true })}\n      >\n        <div className={cx(noticeText)}>공지사항</div>\n      </div>\n      <div\n        className={name === 'faqs' ? cx(faqSelect) : cx(faqNonSelect)}\n        onClick={() => navigate('/support/faqs', { replace: true })}\n      >\n        <div className={cx(faqText)}>FAQ</div>\n      </div>\n    </div>\n  );\n}\nexport default sideBar;\n\nconst consumerSupport = css`\n  width: 168px;\n  height: 106px;\n  box-shadow: 0px 0px 8px rgba(132, 131, 141, 0.5);\n  border-radius: 6px;\n`;\nconst faqNonSelect = css`\n  display: flex;\n  width: 168px;\n  height: 53px;\n  justify-content: center;\n  background-color: #ffff;\n  margin: 0;\n  cursor: pointer;\n  color: #4f4e5c;\n  border-radius: 0px 0px 6px 6px;\n`;\nconst faqSelect = css`\n  display: flex;\n  width: 168px;\n  height: 53px;\n  justify-content: center;\n  margin: 0;\n  background-color: #ff445e;\n  color: #ffffff;\n  cursor: pointer;\n  border-radius: 0px 0px 6px 6px;\n`;\nconst faqText = css`\n  display: flex;\n  align-items: center;\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 170%;\n  text-align: center;\n`;\nconst noticeSelect = css`\n  display: flex;\n  justify-content: center;\n  left: 236px;\n  top: 252px;\n  width: 168px;\n  height: 53px;\n  background-color: #ff445e;\n  border-radius: 6px 6px 0 0;\n  font-family: 'Noto Sans KR';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 130%;\n  text-align: center;\n  align-items: center;\n  color: #fff;\n  cursor: pointer;\n`;\nconst noticeNonSelect = css`\n  display: flex;\n  justify-content: center;\n  left: 236px;\n  top: 252px;\n  width: 168px;\n  height: 53px;\n  background-color: #fff;\n  border-radius: 6px 6px 0 0;\n  font-family: 'Noto Sans KR';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 130%;\n  text-align: center;\n  align-items: center;\n  color: #4f4e5c;\n  cursor: pointer;\n`;\nconst noticeText = css`\n  display: flex;\n  justify-content: center;\n  font-family: 'Noto Sans KR';\n  font-style: normal;\n  width: 168px;\n  height: 21px;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 130%;\n  text-align: center;\n  align-items: center;\n`;\n","import React from 'react';\nimport { css, cx } from '@emotion/css';\nimport { Img } from '../../../components';\n\ninterface Props {\n  form: {\n    title: string;\n    description: string;\n    postNo: number;\n    editForm: boolean;\n  };\n  setForm: React.Dispatch<\n    React.SetStateAction<{\n      title: string;\n      description: string;\n      postNo: number;\n      editForm: boolean;\n    }>\n  >;\n  onSubmit: () => void;\n}\n\nconst articleTitle = ({ form, setForm, onSubmit }: Props) => {\n  const dateObject = new Date();\n  const year = dateObject.getFullYear();\n  const month = dateObject.getMonth() + 1;\n  const date = dateObject.getDate();\n\n  return (\n    <div className={cx(titleWrap)}>\n      <div className={cx(left)}>\n        <input\n          type=\"text\"\n          placeholder=\"제목을 입력해 주세요.\"\n          className={cx(title)}\n          onChange={e =>\n            setForm({\n              ...form,\n              title: e.target.value,\n            })\n          }\n          value={form.title}\n        />\n        <div className={cx(uploadDate)}>{`${year}년 ${month}월 ${date}일`}</div>\n      </div>\n      <button className={cx(rightWriteButton)} onClick={() => onSubmit()}>\n        <div className={cx(writeButtonText)}>\n          {form.editForm ? '수정' : '작성'}\n        </div>\n        <div\n          className={cx(css`\n            width: 20px;\n            height: 20px;\n            padding-left: 8px;\n          `)}\n        >\n          <Img src=\"/img/write.png\" alt=\"write\" />\n        </div>\n      </button>\n    </div>\n  );\n};\nexport default articleTitle;\n\nconst titleWrap = css`\n  display: flex;\n  padding: 16px 24px;\n  justify-content: space-between;\n`;\nconst title = css`\n  width: 508px;\n  height: 26px;\n  font-family: 'Noto Sans KR';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 170%;\n  color: #4f4e5c;\n  outline: none;\n  border: 0px;\n`;\nconst rightWriteButton = css`\n  display: flex;\n  width: 100px;\n  height: 43px;\n  align-items: center;\n  background-color: #ff445e;\n  border: none;\n  border-radius: 6px;\n  justify-content: center;\n  cursor: pointer;\n`;\nconst uploadDate = css`\n  font-family: 'Noto Sans KR';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 170%;\n  color: #84838d;\n`;\nconst left = css`\n  display: flex;\n  flex-direction: column;\n`;\nconst writeButtonText = css`\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 23.8px;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  color: #ffffff;\n`;\n","import React, { useState } from 'react';\nimport { css, cx } from '@emotion/css';\nimport { Img } from '../../../components';\nimport { SearchProps } from './NoticeWriteSearchHeader';\nimport { EditorState } from 'draft-js';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../../redux/root';\n\nconst search = ({\n  setIsWrite,\n  isWrite,\n  form,\n  setForm,\n  onSearch,\n  setEditorState,\n}: SearchProps) => {\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const [searchItem, setSearchItem] = useState<string>('');\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchItem(e.target.value);\n  };\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const user = useSelector((state: RootState) => state.user.user);\n  return (\n    <div className={cx(container)}>\n      <div className={cx(write)} onClick={() => setIsWrite(!isWrite)}>\n        {user.manager ? (\n          <span\n            onClick={() => {\n              setForm({\n                ...form,\n                title: '',\n                description: '',\n                editForm: false,\n                postNo: 0,\n              });\n              setEditorState(EditorState.createEmpty());\n            }}\n          >\n            {isWrite ? '작성취소' : '작성하기'}\n          </span>\n        ) : (\n          ''\n        )}\n      </div>\n      <form\n        className={cx(wrap)}\n        onSubmit={e => {\n          e.preventDefault();\n          onSearch(searchItem);\n        }}\n      >\n        <input\n          type=\"text\"\n          placeholder=\"무엇이 궁금한가요?\"\n          id=\"placeHolder\"\n          value={searchItem}\n          onChange={e => onChange(e)}\n        />\n        <div\n          className={cx(css`\n            width: 16px;\n            height: 16px;\n          `)}\n        >\n          <Img src=\"/img/search.png\" alt=\"search\" />\n        </div>\n      </form>\n    </div>\n  );\n};\nexport default search;\n\nconst container = css`\n  display: flex;\n  flex-direction: column;\n  justify-content: right;\n`;\nconst write = css`\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 20.4px;\n  color: #4f4e5c;\n  text-align: right;\n  margin-bottom: 8px;\n  cursor: pointer;\n`;\nconst wrap = css`\n  display: flex;\n  justify-content: space-between;\n  padding: 8px 16px;\n  width: 492px;\n  height: 40px;\n  background: #ffffff;\n  box-shadow: 0px 0px 8px 0px rgba(132, 131, 141, 0.2);\n  border-radius: 8px;\n  align-items: center;\n  color: #84838d;\n  #placeHolder {\n    width: 428px;\n    height: 24px;\n    border: 0px;\n    font-family: 'Noto Sans KR';\n    font-style: normal;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 170%;\n  }\n  #placeHolder:focus {\n    outline: none;\n  }\n`;\n","import React from 'react';\nimport { css, cx } from '@emotion/css';\n\ninterface Props {\n  param?: string;\n}\n\nconst header = ({ param }: Props) => {\n  return (\n    <div className={cx(topWrap)}>\n      <div className={cx(MainTitle)}>고객지원</div>\n      <div className={cx(subTitle)}>\n        {param === 'notices' ? '공지사항' : 'FAQ'}\n      </div>\n    </div>\n  );\n};\nexport default header;\n\nconst topWrap = css`\n  display: flex;\n  align-items: baseline;\n  margin-left: 190px;\n`;\nconst MainTitle = css`\n  font-family: 'Noto Sans KR';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 28px;\n  line-height: 130%;\n  color: #4f4e5c;\n  margin-right: 16px;\n`;\nconst subTitle = css`\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 130%;\n  color: #4f4e5c;\n`;\n","import React from 'react';\nimport { css, cx } from '@emotion/css';\nimport Search from './NoticeWriteSearch';\nimport Header from './NoticeWriteheader';\nimport { EditorState } from 'draft-js';\n\nexport interface SearchProps {\n  setIsWrite: React.Dispatch<React.SetStateAction<boolean>>;\n  isWrite: boolean;\n  form: {\n    title: string;\n    description: string;\n    postNo: number;\n    editForm: boolean;\n  };\n  setForm: React.Dispatch<\n    React.SetStateAction<{\n      title: string;\n      description: string;\n      postNo: number;\n      editForm: boolean;\n    }>\n  >;\n  param?: string;\n  onSearch: (searchBy: string) => void;\n  setEditorState: React.Dispatch<React.SetStateAction<EditorState>>;\n}\n\nconst serchHeader = ({\n  setIsWrite,\n  isWrite,\n  form,\n  setForm,\n  param,\n  onSearch,\n  setEditorState,\n}: SearchProps) => {\n  return (\n    <div className={cx(wholeStyle)}>\n      <Header param={param} />\n      <div className={cx(searchStyle)}>\n        <Search\n          setIsWrite={setIsWrite}\n          isWrite={isWrite}\n          form={form}\n          setForm={setForm}\n          onSearch={onSearch}\n          setEditorState={setEditorState}\n        />\n      </div>\n    </div>\n  );\n};\nexport default serchHeader;\n\nconst searchStyle = css`\n  display: flex;\n  flex-direction: column;\n  justify-content: right;\n`;\nconst wholeStyle = css`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 40px;\n`;\n","import React, { useState } from 'react';\nimport { css, cx } from '@emotion/css';\nimport { Img } from '../../../components';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../../redux/root';\n\ninterface Props {\n  notice: {\n    no: number;\n    title: string;\n    description: string;\n    createdAt: string;\n  };\n  key: number;\n  onEdit: (no: number, title: string, description: string) => void;\n  onDelete: (no: number) => void;\n}\n\nfunction subArticle({ notice, onEdit, onDelete }: Props) {\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const [isView, setIsView] = useState<boolean>(false);\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const user = useSelector((state: RootState) => state.user.user);\n\n  return (\n    <div\n      className={cx(\n        css`\n          display: flex;\n          flex-direction: column;\n          border-bottom: 1px solid #ededef;\n          .noncontainer {\n            width: 100%;\n            padding-left: 24px;\n            margin-bottom: 10px;\n            display: none;\n          }\n          .container {\n            width: 100%;\n            padding-left: 24px;\n            margin-bottom: 10px;\n            display: flex;\n          }\n        `,\n      )}\n    >\n      <div className={cx(wrap)}>\n        <div className={cx(left)}>\n          <div className={cx(title)}>{notice.title}</div>\n          <div className={cx(uploadDate)}>{notice.createdAt}</div>\n        </div>\n        <div className={cx(right)}>\n          {user.manager ? (\n            <div\n              className={cx(edit)}\n              onClick={() => {\n                onEdit(notice.no, notice.title, notice.description);\n              }}\n            >\n              수정\n            </div>\n          ) : (\n            ''\n          )}\n          {user.manager ? (\n            <div className={cx(d2lete)} onClick={() => onDelete(notice.no)}>\n              삭제\n            </div>\n          ) : (\n            ''\n          )}\n          <div\n            className={cx(css`\n              width: 16px;\n              height: 16px;\n              cursor: pointer;\n            `)}\n            onClick={() => setIsView(!isView)}\n          >\n            <Img\n              src={\n                !isView\n                  ? '/img/arrow-down-dark3.png'\n                  : '/img/arrow-up-dark3.png'\n              }\n            />\n          </div>\n        </div>\n      </div>\n      <div\n        className={\n          isView\n            ? 'container'\n            : css`\n                display: none;\n              `\n        }\n      >\n        <div\n          className={\n            isView\n              ? contents\n              : css`\n                  display: none;\n                `\n          }\n          dangerouslySetInnerHTML={{ __html: notice.description }}\n        ></div>\n      </div>\n    </div>\n  );\n}\nexport default subArticle;\n\nconst wrap = css`\n  display: flex;\n  padding: 16px 24px;\n  justify-content: space-between;\n`;\nconst title = css`\n  width: 508px;\n  height: 26px;\n  font-family: 'Noto Sans KR';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 170%;\n  color: #4f4e5c;\n  cursor: pointer;\n`;\nconst right = css`\n  display: flex;\n  font-family: 'Noto Sans KR';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 170%;\n  text-align: right;\n  align-items: center;\n  color: #84838d;\n`;\nconst edit = css`\n  cursor: pointer;\n`;\nconst d2lete = css`\n  padding-left: 8px;\n  padding-right: 16px;\n  cursor: pointer;\n`;\nconst uploadDate = css`\n  font-family: 'Noto Sans KR';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 170%;\n  color: #84838d;\n  cursor: pointer;\n`;\nconst left = css`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst contents = css`\n  border-left: 2px solid #ff445e;\n  padding-left: 10px;\n  width: 90%;\n`;\n","import SubArticle from './NoticeWriteSubAriticle';\n\ninterface Props {\n  notices: NoticeTYPE[];\n  onEdit: (no: number, title: string, description: string) => void;\n  onDelete: (no: number) => void;\n}\n\nexport interface NoticeTYPE {\n  no: number;\n  title: string;\n  description: string;\n  createdAt: string;\n}\nconst CommentContainer = ({ notices, onEdit, onDelete }: Props) => {\n  return (\n    <section>\n      {notices.map((notice: NoticeTYPE, index: number) => (\n        <SubArticle\n          key={index}\n          notice={notice}\n          onEdit={onEdit}\n          onDelete={onDelete}\n        />\n      ))}\n    </section>\n  );\n};\nexport default CommentContainer;\n","import { css, cx } from '@emotion/css';\nimport styled from '@emotion/styled';\nimport SideBar from './notice/NoticeWriteSidebar';\nimport ArticleTitle from './notice/NoticeWriteAriticleTitle';\nimport HeaderSearch from './notice/NoticeWriteSearchHeader';\nimport CommetContainer from './notice/NoticeCommentWrapper';\nimport { useCallback, useEffect, useState } from 'react';\nimport {\n  createNoticePost,\n  getNotices,\n  searchNotices,\n} from '../../redux/notice/reducer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch } from '../../redux/root';\nimport { RootState } from '../../redux/root';\nimport { useNavigate, useParams, useSearchParams } from 'react-router-dom';\nimport { deleteNoticePost } from '../../apis/notice';\nimport { Editor } from 'react-draft-wysiwyg';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\n\nconst Notice = () => {\n  const [isWrite, setIsWrite] = useState<boolean>(false);\n  const [form, setForm] = useState<{\n    title: string;\n    description: string;\n    postNo: number;\n    editForm: boolean;\n  }>({\n    title: '',\n    description: '',\n    postNo: 0,\n    editForm: false,\n  });\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n  const { name } = useParams();\n  const [searchParams] = useSearchParams();\n  const dispatch = useDispatch<AppDispatch>();\n  const notices: any = useSelector((state: RootState) => state.notice.post);\n  const navigate = useNavigate();\n  const searchItem = searchParams.get('title');\n\n  const onSubmit = useCallback(() => {\n    if (form.title === '' || form.description === '') {\n      alert('내용을 입력해주세요');\n      return;\n    }\n    const { title, description, editForm, postNo } = form;\n    dispatch(\n      createNoticePost({ title, description, params: name!, editForm, postNo }),\n    ).then(res => {\n      if (res.payload.success) setIsWrite(false);\n    });\n  }, [form]);\n\n  const onEdit = (no: number, title: string, description: string) => {\n    setForm({\n      ...form,\n      title,\n      description,\n      editForm: true,\n      postNo: no,\n    });\n    const blocksFromHtml = htmlToDraft(description);\n    const { contentBlocks, entityMap } = blocksFromHtml;\n    const contentState = ContentState.createFromBlockArray(\n      contentBlocks,\n      entityMap,\n    );\n    const newState = EditorState.createWithContent(contentState);\n    setEditorState(newState);\n    setIsWrite(true);\n  };\n\n  const onDelete = async (no: number) => {\n    const data = { params: name, postNo: no };\n    await deleteNoticePost(data).then(res => {\n      if (res.data.success) dispatch(getNotices(name!));\n    });\n  };\n\n  const onSearch = (searchBy: string) => {\n    navigate({\n      pathname: `/support/${name}`,\n      search: `?title=${searchBy}`,\n    });\n  };\n  const editorToHtml = (editorState: any) => {\n    return draftToHtml(convertToRaw(editorState.getCurrentContent()));\n  };\n  const onEditorChange = (editorState: EditorState) => {\n    const value = editorToHtml(editorState);\n    setEditorState(editorState);\n    setForm({\n      ...form,\n      description: value,\n    });\n  };\n\n  useEffect(() => {\n    if (searchItem) {\n      dispatch(\n        searchNotices({\n          params: name,\n          search: searchItem,\n        }),\n      );\n    } else {\n      if (name) {\n        dispatch(getNotices(name));\n      }\n    }\n  }, [dispatch, isWrite, name, searchItem]);\n\n  return (\n    <div className={cx(wholeStyle)}>\n      <HeaderSearch\n        isWrite={isWrite}\n        setIsWrite={setIsWrite}\n        form={form}\n        setForm={setForm}\n        param={name}\n        onSearch={onSearch}\n        setEditorState={setEditorState}\n      />\n      <section className={cx(sectionStyle)}>\n        <SideBar name={name!} />\n        <article className={cx(container)}>\n          {isWrite && (\n            <>\n              <ArticleTitle form={form} setForm={setForm} onSubmit={onSubmit} />\n              <DraftEditor>\n                <Editor\n                  editorState={editorState}\n                  onEditorStateChange={onEditorChange}\n                  editorClassName=\"editor\"\n                  localization={{\n                    locale: 'ko',\n                  }}\n                  placeholder=\"본문 내용을 작성해주세요.\"\n                />\n              </DraftEditor>\n            </>\n          )}\n          <CommetContainer\n            notices={notices}\n            onEdit={onEdit}\n            onDelete={onDelete}\n          />\n        </article>\n      </section>\n    </div>\n  );\n};\nexport default Notice;\n\nconst wholeStyle = css`\n  margin: 0 auto;\n  width: 1190px;\n  display: flex;\n  flex-direction: column;\n  justify-content: left;\n  width: 1128px;\n  min-height: 80vh;\n`;\nconst container = css`\n  width: 936px;\n  height: fit-content;\n  max-height: 696px;\n  background: #ffffff;\n  box-shadow: 0px 0px 8px rgba(132, 131, 141, 0.5);\n  border-radius: 6px;\n  overflow-x: hidden;\n  overflow-y: auto;\n  margin-left: 24px;\n  ::-webkit-scrollbar {\n    width: 5px;\n    border-radius: 10px;\n    position: relative;\n    left: 300px;\n    top: 50px;\n    height: 183px;\n  }\n  ::-webkit-scrollbar-thumb {\n    background-color: rgba(255, 68, 94, 1);\n    border-radius: 10px;\n  }\n  ::-webkit-scrollbar-track {\n    background-color: rgba(231, 231, 232, 1);\n    border-radius: 10px;\n  }\n`;\nconst sectionStyle = css`\n  display: flex;\n  margin-top: 24px;\n`;\n\nconst DraftEditor = styled.div`\n  padding: 20px;\n  box-shadow: inset 0px 0px 8px rgba(132, 131, 141, 0.2);\n  .rdw-editor-wrapper {\n    overflow-y: auto;\n    height: 100px;\n  }\n  .rdw-editor-toolbar {\n    display: none;\n  }\n  .rdw-editor-main {\n    font-weight: 400;\n    font-size: 14px;\n  }\n`;\n"],"names":["name","navigate","useNavigate","className","cx","consumerSupport","noticeSelect","noticeNonSelect","onClick","replace","noticeText","faqSelect","faqNonSelect","faqText","css","form","setForm","onSubmit","dateObject","Date","year","getFullYear","month","getMonth","date","getDate","titleWrap","left","type","placeholder","title","onChange","e","target","value","uploadDate","rightWriteButton","writeButtonText","editForm","src","alt","setIsWrite","isWrite","onSearch","setEditorState","useState","searchItem","setSearchItem","user","useSelector","state","container","write","manager","description","postNo","EditorState","wrap","preventDefault","id","param","topWrap","MainTitle","subTitle","wholeStyle","searchStyle","notice","onEdit","onDelete","isView","setIsView","createdAt","right","edit","no","d2lete","contents","dangerouslySetInnerHTML","__html","notices","map","index","editorState","useParams","useSearchParams","searchParams","dispatch","useDispatch","post","get","useCallback","createNoticePost","params","then","res","payload","success","alert","data","deleteNoticePost","getNotices","useEffect","searchNotices","search","searchBy","pathname","sectionStyle","DraftEditor","Editor","onEditorStateChange","draftToHtml","convertToRaw","getCurrentContent","editorToHtml","editorClassName","localization","locale","blocksFromHtml","htmlToDraft","contentBlocks","entityMap","contentState","ContentState","newState","styled"],"sourceRoot":""}